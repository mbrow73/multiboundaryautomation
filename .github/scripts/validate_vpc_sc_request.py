#!/usr/bin/env python3
"""
validate_vpc_sc_request.py

Validates a VPC Service Controls request by parsing the issue body with the
handlerâ€™s parser and checking:
  * Perimeter names exist in router.yml
  * Project IDs are 10-digit numbers in 'projects/<id>' format
  * IP addresses are in CIDR x.x.x.x/xx and require a TLM-ID for INGRESS rules
  * For supported services, methods and permissions are checked against static maps
Outputs:
  - valid: 'true' or 'false'
  - errors: JSON array of validation error messages
"""

import argparse
import json
import os
import re
import sys
from typing import Dict, Any, List

import yaml  # type: ignore

# Import the same parser used by vpc_sc_request_handler.py
sys.path.append(os.path.join(os.path.dirname(__file__), ".."))
from vpc_sc_request_handler import parse_issue_body  # type: ignore

# Populate these dictionaries with the supported methods and permissions for each service.
SUPPORTED_METHODS: Dict[str, set[str]] = {
    "bigquery.googleapis.com": {
    "BigQueryRead.CreateReadSession",
    "BigQueryRead.ReadRows",
    "BigQueryRead.SplitReadStream",
    "BigQueryStorage.BatchCreateReadSessionStreams",
    "BigQueryStorage.CreateReadSession",
    "BigQueryStorage.FinalizeStream",
    "BigQueryStorage.ReadRows",
    "BigQueryStorage.SplitReadStream",
    "BigQueryWrite.AppendRows",
    "BigQueryWrite.BatchCommitWriteStreams",
    "BigQueryWrite.CreateWriteStream",
    "BigQueryWrite.FinalizeWriteStream",
    "BigQueryWrite.GetWriteStream",
    "ConnectionService.CreateConnection",
    "ConnectionService.DeleteConnection",
    "ConnectionService.GetConnection",
    "ConnectionService.GetIamPolicy",
    "ConnectionService.ListConnections",
    "ConnectionService.SetIamPolicy",
    "ConnectionService.TestIamPermissions",
    "ConnectionService.UpdateConnection",
    "DatasetService.DeleteDataset",
    "DatasetService.GetDataset",
    "DatasetService.InsertDataset",
    "DatasetService.ListDatasets",
    "DatasetService.PatchDataset",
    "DatasetService.UpdateDataset",
    "Discovery.GetDiscovery",
    "Discovery.GetDiscoveryRest",
    "IAMPolicy.GetIamPolicy",
    "IAMPolicy.SetIamPolicy",
    "IAMPolicy.TestIamPermissions",
    "JobService.CancelJob",
    "JobService.DeleteJob",
    "JobService.GetJob",
    "JobService.GetQueryResults",
    "JobService.InsertJob",
    "JobService.ListJobs",
    "JobService.Query",
    "Locations.GetLocation",
    "Locations.ListLocations",
    "ModelService.DeleteModel",
    "ModelService.GetModel",
    "ModelService.ListModels",
    "ModelService.PatchModel",
    "ProjectService.GetServiceAccount",
    "ProjectService.ListProjects",
    "ReservationService.CreateAssignment",
    "ReservationService.CreateCapacityCommitment",
    "ReservationService.CreateReservation",
    "ReservationService.CreateReservationGroup",
    "ReservationService.DeleteAssignment",
    "ReservationService.DeleteCapacityCommitment",
    "ReservationService.DeleteReservation",
    "ReservationService.DeleteReservationGroup",
    "ReservationService.GetBiReservation",
    "ReservationService.GetCapacityCommitment",
    "ReservationService.GetReservation",
    "ReservationService.GetReservationGroup",
    "ReservationService.ListAssignments",
    "ReservationService.ListCapacityCommitments",
    "ReservationService.ListReservationGroups",
    "ReservationService.ListReservations",
    "ReservationService.MergeCapacityCommitments",
    "ReservationService.MoveAssignment",
    "ReservationService.SearchAllAssignments",
    "ReservationService.SearchAssignments",
    "ReservationService.SplitCapacityCommitment",
    "ReservationService.UpdateAssignment",
    "ReservationService.UpdateBiReservation",
    "ReservationService.UpdateCapacityCommitment",
    "ReservationService.UpdateReservation",
    "ReservationService.UpgradeEdition",
    "RoutineService.DeleteRoutine",
    "RoutineService.GetRoutine",
    "RoutineService.InsertRoutine",
    "RoutineService.ListRoutines",
    "RoutineService.PatchRoutine",
    "RoutineService.UpdateRoutine",
    "RowAccessPolicyService.ListRowAccessPolicies",
    "SavedQueryService.CreateSavedQuery",
    "SavedQueryService.DeleteSavedQuery",
    "SavedQueryService.ListSavedQueries",
    "SavedQueryService.UpdateSavedQuery",
    "TableDataService.InsertAll",
    "TableDataService.List",
    "TableService.DeleteTable",
    "TableService.GetTable",
    "TableService.InsertTable",
    "TableService.ListTables",
    "TableService.PatchTable",
    "TableService.UpdateTable",
    },
    "logging.googleapis.com": {
    "AnalyticsService.ExtractQueryResources",
    "AnalyticsService.QueryData",
    "AnalyticsService.ReadQueryResults",
    "AnalyticsService.TranslateTableNames",
    "AnalyticsService.ValidateQuery",
    "BillingService.GetUsageByResourceType",
    "ConfigServiceV2.CopyLogEntries",
    "ConfigServiceV2.CreateBucket",
    "ConfigServiceV2.CreateBucketAsync",
    "ConfigServiceV2.CreateExclusion",
    "ConfigServiceV2.CreateLink",
    "ConfigServiceV2.CreateRecentQuery",
    "ConfigServiceV2.CreateSavedQuery",
    "ConfigServiceV2.CreateSink",
    "ConfigServiceV2.CreateView",
    "ConfigServiceV2.DeleteBucket",
    "ConfigServiceV2.DeleteExclusion",
    "ConfigServiceV2.DeleteLink",
    "ConfigServiceV2.DeleteSavedQuery",
    "ConfigServiceV2.DeleteSink",
    "ConfigServiceV2.DeleteView",
    "ConfigServiceV2.FetchUserPreference",
    "ConfigServiceV2.GetBucket",
    "ConfigServiceV2.GetCmekSettings",
    "ConfigServiceV2.GetExclusion",
    "ConfigServiceV2.GetLink",
    "ConfigServiceV2.GetSavedQuery",
    "ConfigServiceV2.GetSettings",
    "ConfigServiceV2.GetSink",
    "ConfigServiceV2.GetView",
    "ConfigServiceV2.ListBuckets",
    "ConfigServiceV2.ListExclusions",
    "ConfigServiceV2.ListLinks",
    "ConfigServiceV2.ListRecentQueries",
    "ConfigServiceV2.ListSavedQueries",
    "ConfigServiceV2.ListSharedQueries",
    "ConfigServiceV2.ListSinks",
    "ConfigServiceV2.ListViews",
    "ConfigServiceV2.MoveBucket",
    "ConfigServiceV2.RedactLogEntries",
    "ConfigServiceV2.ResolveSettings",
    "ConfigServiceV2.SearchRecentQueries",
    "ConfigServiceV2.SearchSavedQueries",
    "ConfigServiceV2.SearchSharedQueries",
    "ConfigServiceV2.UndeleteBucket",
    "ConfigServiceV2.UpdateBucket",
    "ConfigServiceV2.UpdateBucketAsync",
    "ConfigServiceV2.UpdateCmekSettings",
    "ConfigServiceV2.UpdateExclusion",
    "ConfigServiceV2.UpdateSavedQuery",
    "ConfigServiceV2.UpdateSettings",
    "ConfigServiceV2.UpdateSink",
    "ConfigServiceV2.UpdateView",
    "ConfigServiceV2.UpsertUserPreference",
    "Discovery.GetDiscovery",
    "Discovery.GetDiscoveryRest",
    "InsightsService.SuggestSearches",
    "Locations.GetLocation",
    "Locations.ListLocations",
    "LoggingService.WriteLogEntries",
    "LoggingServiceV2.AggregateLogs",
    "LoggingServiceV2.DeleteLog",
    "LoggingServiceV2.ListLogEntries",
    "LoggingServiceV2.ListLogEntries/NonQuotaCheck",
    "LoggingServiceV2.ListLogViews",
    "LoggingServiceV2.ListLogs",
    "LoggingServiceV2.ListMonitoredResourceDescriptors",
    "LoggingServiceV2.ListResourceKeys",
    "LoggingServiceV2.ListResourceValues",
    "LoggingServiceV2.ReadLogEntriesLegacy",
    "LoggingServiceV2.TailLogEntries",
    "LoggingServiceV2.WriteLogEntries",
    "LoggingServiceV2.WriteLogEntries/NonQuotaCheck",
    "MetricsServiceV2.CreateLogMetric",
    "MetricsServiceV2.DeleteLogMetric",
    "MetricsServiceV2.GetLogMetric",
    "MetricsServiceV2.ListLogMetrics",
    "MetricsServiceV2.UpdateLogMetric",
    "NotificationsService.CreateNotificationRule",
    "NotificationsService.DeleteNotificationRule",
    "NotificationsService.GetNotificationRule",
    "NotificationsService.ListNotificationRules",
    "NotificationsService.UpdateNotificationRule",
    "Operations.CancelOperation",
    "Operations.DeleteOperation",
    "Operations.GetOperation",
    "Operations.ListOperations",
    "Operations.WaitOperation",
    "UiSupportService.TranslateQuery",
    "UiSupportService.ValidateAndGetExpression"
    },
    "artifactregistry.googleapis.com": {
    "ArtifactRegistry.CreateRepository",
    "ArtifactRegistry.CreateTag",
    "ArtifactRegistry.DeleteRepository",
    "ArtifactRegistry.DeleteTag",
    "ArtifactRegistry.GetRepository",
    "ArtifactRegistry.GetTag",
    "ArtifactRegistry.GetVersion",
    "ArtifactRegistry.ListFiles",
    "ArtifactRegistry.ListPackages",
    "ArtifactRegistry.ListRepositories",
    "ArtifactRegistry.ListVersions",
    "ArtifactRegistry.SetIamPolicy",
    "ArtifactRegistry.TestIamPermissions",
    "ArtifactRegistry.UpdateRepository",
    "ArtifactRegistry.UpdateTag",
    "Locations.GetLocation",
    "Locations.ListLocations",
    "artifactregistry.googleapis.com/AptDelete",
    "artifactregistry.googleapis.com/AptRead",
    "artifactregistry.googleapis.com/AptWrite",
    "artifactregistry.googleapis.com/DockerDelete",
    "artifactregistry.googleapis.com/DockerRead",
    "artifactregistry.googleapis.com/DockerWrite",
    "artifactregistry.googleapis.com/GoDelete",
    "artifactregistry.googleapis.com/GoRead",
    "artifactregistry.googleapis.com/GoWrite",
    "artifactregistry.googleapis.com/GooGetDelete",
    "artifactregistry.googleapis.com/GooGetRead",
    "artifactregistry.googleapis.com/GooGetWrite",
    "artifactregistry.googleapis.com/KfpDelete",
    "artifactregistry.googleapis.com/KfpRead",
    "artifactregistry.googleapis.com/KfpWrite",
    "artifactregistry.googleapis.com/MavenRead",
    "artifactregistry.googleapis.com/MavenWrite",
    "artifactregistry.googleapis.com/NPMRead",
    "artifactregistry.googleapis.com/NPMWrite",
    "artifactregistry.googleapis.com/PythonDelete",
    "artifactregistry.googleapis.com/PythonRead",
    "artifactregistry.googleapis.com/PythonWrite",
    "artifactregistry.googleapis.com/ScottyAgentRead",
    "artifactregistry.googleapis.com/ScottyAgentWrite",
    "artifactregistry.googleapis.com/YumDelete",
    "artifactregistry.googleapis.com/YumRead",
    "artifactregistry.googleapis.com/YumWrite"
    },
    "cloudresourcemanager.googleapis.com": {
    "Projects.SetIamPolicy",
    "TagHolds.CreateTagHold",
    "TagHolds.DeleteTagHold",
    "TagHolds.ListTagHolds",
    "TagKeys.CreateTagKey",
    "TagKeys.DeleteTagKey",
    "TagKeys.GetIamPolicy",
    "TagKeys.GetTagKey",
    "TagKeys.ListTagKeys",
    "TagKeys.SetIamPolicy",
    "TagKeys.TestIamPermissions",
    "TagKeys.UpdateTagKey",
    "TagValues.CreateTagValue",
    "TagValues.DeleteTagValue",
    "TagValues.GetIamPolicy",
    "TagValues.GetTagValue",
    "TagValues.ListTagValues",
    "TagValues.SetIamPolicy",
    "TagValues.TestIamPermissions",
    "TagValues.UpdateTagValue"
    },
    "compute.googleapis.com": {
    "AcceleratorTypesService.AggregatedList",
    "AcceleratorTypesService.Get",
    "AcceleratorTypesService.List",
    "AllocationsService.AggregatedList",
    "AllocationsService.Delete",
    "AllocationsService.Get",
    "AllocationsService.GetPolicy",
    "AllocationsService.Insert",
    "AllocationsService.List",
    "AllocationsService.Resize",
    "AllocationsService.SetPolicy",
    "AllocationsService.TestPermissions",
    "AllocationsService.Update",
    "AutoscalersService.AggregatedList",
    "AutoscalersService.Delete",
    "AutoscalersService.Get",
    "AutoscalersService.Insert",
    "AutoscalersService.List",
    "AutoscalersService.Patch",
    "AutoscalersService.TestPermissions",
    "AutoscalersService.Update",
    "BackendBucketsService.AddSignedUrlKey",
    "BackendBucketsService.Delete",
    "BackendBucketsService.DeleteSignedUrlKey",
    "BackendBucketsService.Get",
    "BackendBucketsService.GetPolicy",
    "BackendBucketsService.Insert",
    "BackendBucketsService.List",
    "BackendBucketsService.Patch",
    "BackendBucketsService.SetEdgeSecurityPolicy",
    "BackendBucketsService.SetPolicy",
    "BackendBucketsService.TestPermissions",
    "BackendBucketsService.Update",
    "BackendServicesService.AddSignedUrlKey",
    "BackendServicesService.AggregatedList",
    "BackendServicesService.Delete",
    "BackendServicesService.DeleteSignedUrlKey",
    "BackendServicesService.Get",
    "BackendServicesService.GetHealth",
    "BackendServicesService.GetPolicy",
    "BackendServicesService.Insert",
    "BackendServicesService.List",
    "BackendServicesService.Patch",
    "BackendServicesService.SetEdgeSecurityPolicy",
    "BackendServicesService.SetPolicy",
    "BackendServicesService.SetSecurityPolicy",
    "BackendServicesService.TestPermissions",
    "BackendServicesService.Update",
    "Discovery.GetDiscovery",
    "Discovery.GetDiscoveryRest",
    "DiskTypesService.AggregatedList",
    "DiskTypesService.Get",
    "DiskTypesService.List",
    "DisksService.AddResourcePolicies",
    "DisksService.AggregatedList",
    "DisksService.BulkInsert",
    "DisksService.CreateSnapshot",
    "DisksService.Delete",
    "DisksService.Get",
    "DisksService.GetPolicy",
    "DisksService.Insert",
    "DisksService.List",
    "DisksService.RemoveResourcePolicies",
    "DisksService.Resize",
    "DisksService.SetLabels",
    "DisksService.SetPolicy",
    "DisksService.StartAsyncReplication",
    "DisksService.StopAsyncReplication",
    "DisksService.StopGroupAsyncReplication",
    "DisksService.TestPermissions",
    "DisksService.Update",
    "DoodadClhResourcesService.AggregatedList",
    "DoodadClhResourcesService.GetClhResource",
    "DoodadClhResourcesService.ListClhResources",
    "DoodadsService.AggregatedList",
    "DoodadsService.Delete",
    "DoodadsService.DeleteReference",
    "DoodadsService.Get",
    "DoodadsService.GetDescription",
    "DoodadsService.GetReference",
    "DoodadsService.GetSettings",
    "DoodadsService.Insert",
    "DoodadsService.InsertReference",
    "DoodadsService.List",
    "DoodadsService.ListReferences",
    "DoodadsService.ListUsable",
    "DoodadsService.PassthroughUpdate",
    "DoodadsService.Patch",
    "DoodadsService.PatchSettings",
    "DoodadsService.PatchWithMask",
    "DoodadsService.PatchWithWildcard",
    "DoodadsService.QueuedUpdate",
    "DoodadsService.Search",
    "DoodadsService.SetLabels",
    "DoodadsService.Update",
    "DoodadsService.UpdateSettings",
    "ExternalVpnGatewaysService.Delete",
    "ExternalVpnGatewaysService.Get",
    "ExternalVpnGatewaysService.Insert",
    "ExternalVpnGatewaysService.List",
    "ExternalVpnGatewaysService.SetLabels",
    "ExternalVpnGatewaysService.TestPermissions",
    "FirewallPoliciesService.AddAssociation",
    "FirewallPoliciesService.AddRule",
    "FirewallPoliciesService.CloneRules",
    "FirewallPoliciesService.Delete",
    "FirewallPoliciesService.Get",
    "FirewallPoliciesService.GetAssociation",
    "FirewallPoliciesService.GetOrganizationPolicy",
    "FirewallPoliciesService.GetRule",
    "FirewallPoliciesService.Insert",
    "FirewallPoliciesService.List",
    "FirewallPoliciesService.ListAssociations",
    "FirewallPoliciesService.Move",
    "FirewallPoliciesService.Patch",
    "FirewallPoliciesService.PatchRule",
    "FirewallPoliciesService.RemoveAssociation",
    "FirewallPoliciesService.RemoveRule",
    "FirewallPoliciesService.SetOrganizationPolicy",
    "FirewallPoliciesService.TestOrganizationPermissions",
    "FirewallsService.Delete",
    "FirewallsService.Get",
    "FirewallsService.Insert",
    "FirewallsService.List",
    "FirewallsService.Patch",
    "FirewallsService.TestPermissions",
    "FirewallsService.Update",
    "FutureReservationsService.AggregatedList",
    "FutureReservationsService.Cancel",
    "FutureReservationsService.Delete",
    "FutureReservationsService.Get",
    "FutureReservationsService.Insert",
    "FutureReservationsService.List",
    "FutureReservationsService.Update",
    "GlobalAddressesService.Delete",
    "GlobalAddressesService.Get",
    "GlobalAddressesService.GetOwnerInstance",
    "GlobalAddressesService.Insert",
    "GlobalAddressesService.List",
    "GlobalAddressesService.Move",
    "GlobalAddressesService.SetLabels",
    "GlobalAddressesService.TestPermissions",
    "GlobalForwardingRulesService.Delete",
    "GlobalForwardingRulesService.Get",
    "GlobalForwardingRulesService.Insert",
    "GlobalForwardingRulesService.List",
    "GlobalForwardingRulesService.Patch",
    "GlobalForwardingRulesService.SetLabels",
    "GlobalForwardingRulesService.SetTarget",
    "GlobalForwardingRulesService.TestPermissions",
    "GlobalNetworkEndpointGroupsService.AttachNetworkEndpoints",
    "GlobalNetworkEndpointGroupsService.Delete",
    "GlobalNetworkEndpointGroupsService.DetachNetworkEndpoints",
    "GlobalNetworkEndpointGroupsService.Get",
    "GlobalNetworkEndpointGroupsService.Insert",
    "GlobalNetworkEndpointGroupsService.List",
    "GlobalNetworkEndpointGroupsService.ListNetworkEndpoints",
    "GlobalOperationsService.AggregatedList",
    "GlobalOperationsService.Delete",
    "GlobalOperationsService.Get",
    "GlobalOperationsService.List",
    "GlobalOperationsService.Wait",
    "GlobalOrganizationOperationsService.Delete",
    "GlobalOrganizationOperationsService.Get",
    "GlobalOrganizationOperationsService.List",
    "GlobalPublicDelegatedPrefixesService.Delete",
    "GlobalPublicDelegatedPrefixesService.Get",
    "GlobalPublicDelegatedPrefixesService.Insert",
    "GlobalPublicDelegatedPrefixesService.List",
    "GlobalPublicDelegatedPrefixesService.Patch",
    "HealthChecksService.AggregatedList",
    "HealthChecksService.Delete",
    "HealthChecksService.Get",
    "HealthChecksService.Insert",
    "HealthChecksService.List",
    "HealthChecksService.Patch",
    "HealthChecksService.TestPermissions",
    "HealthChecksService.Update",
    "HttpHealthChecksService.Delete",
    "HttpHealthChecksService.Get",
    "HttpHealthChecksService.Insert",
    "HttpHealthChecksService.List",
    "HttpHealthChecksService.Patch",
    "HttpHealthChecksService.TestPermissions",
    "HttpHealthChecksService.Update",
    "HttpsHealthChecksService.Delete",
    "HttpsHealthChecksService.Get",
    "HttpsHealthChecksService.Insert",
    "HttpsHealthChecksService.List",
    "HttpsHealthChecksService.Patch",
    "HttpsHealthChecksService.TestPermissions",
    "HttpsHealthChecksService.Update",
    "ImageFamilyViewsService.Get",
    "ImagesService.Delete",
    "ImagesService.Deprecate",
    "ImagesService.Get",
    "ImagesService.GetFromFamily",
    "ImagesService.GetPolicy",
    "ImagesService.Insert",
    "ImagesService.List",
    "ImagesService.Patch",
    "ImagesService.SetLabels",
    "ImagesService.SetPolicy",
    "ImagesService.TestPermissions",
    "InstanceGroupManagerResizeRequestsService.Cancel",
    "InstanceGroupManagerResizeRequestsService.Delete",
    "InstanceGroupManagerResizeRequestsService.Get",
    "InstanceGroupManagerResizeRequestsService.Insert",
    "InstanceGroupManagerResizeRequestsService.List",
    "InstanceGroupManagersService.AbandonInstances",
    "InstanceGroupManagersService.AggregatedList",
    "InstanceGroupManagersService.ApplyUpdatesToInstances",
    "InstanceGroupManagersService.CreateInstances",
    "InstanceGroupManagersService.Delete",
    "InstanceGroupManagersService.DeleteInstances",
    "InstanceGroupManagersService.DeletePerInstanceConfigs",
    "InstanceGroupManagersService.Get",
    "InstanceGroupManagersService.Insert",
    "InstanceGroupManagersService.List",
    "InstanceGroupManagersService.ListErrors",
    "InstanceGroupManagersService.ListManagedInstances",
    "InstanceGroupManagersService.ListPerInstanceConfigs",
    "InstanceGroupManagersService.Patch",
    "InstanceGroupManagersService.PatchPerInstanceConfigs",
    "InstanceGroupManagersService.RecreateInstances",
    "InstanceGroupManagersService.Resize",
    "InstanceGroupManagersService.ResizeAdvanced",
    "InstanceGroupManagersService.ResumeInstances",
    "InstanceGroupManagersService.SetAutoHealingPolicies",
    "InstanceGroupManagersService.SetInstanceTemplate",
    "InstanceGroupManagersService.SetTargetPools",
    "InstanceGroupManagersService.StartInstances",
    "InstanceGroupManagersService.StopInstances",
    "InstanceGroupManagersService.SuspendInstances",
    "InstanceGroupManagersService.TestPermissions",
    "InstanceGroupManagersService.Update",
    "InstanceGroupManagersService.UpdatePerInstanceConfigs",
    "InstanceGroupsService.AddInstances",
    "InstanceGroupsService.AggregatedList",
    "InstanceGroupsService.Delete",
    "InstanceGroupsService.Get",
    "InstanceGroupsService.Insert",
    "InstanceGroupsService.List",
    "InstanceGroupsService.ListInstances",
    "InstanceGroupsService.RemoveInstances",
    "InstanceGroupsService.SetNamedPorts",
    "InstanceGroupsService.TestPermissions",
    "InstanceSettingsService.Get",
    "InstanceSettingsService.Patch",
    "InstanceTemplatesService.AggregatedList",
    "InstanceTemplatesService.Delete",
    "InstanceTemplatesService.Get",
    "InstanceTemplatesService.GetPolicy",
    "InstanceTemplatesService.Insert",
    "InstanceTemplatesService.List",
    "InstanceTemplatesService.SetPolicy",
    "InstanceTemplatesService.TestPermissions",
    "InstancesService.AddAccessConfig",
    "InstancesService.AddResourcePolicies",
    "InstancesService.AggregatedList",
    "InstancesService.AttachDisk",
    "InstancesService.BulkInsert",
    "InstancesService.Delete",
    "InstancesService.DeleteAccessConfig",
    "InstancesService.DetachDisk",
    "InstancesService.Get",
    "InstancesService.GetEffectiveFirewalls",
    "InstancesService.GetGuestAttributes",
    "InstancesService.GetLicenses",
    "InstancesService.GetPolicy",
    "InstancesService.GetScreenshot",
    "InstancesService.GetSerialPortOutput",
    "InstancesService.GetShieldedInstanceIdentity",
    "InstancesService.GetShieldedVmIdentity",
    "InstancesService.Insert",
    "InstancesService.List",
    "InstancesService.ListReferrers",
    "InstancesService.PerformMaintenance",
    "InstancesService.RemoveResourcePolicies",
    "InstancesService.Reset",
    "InstancesService.Resume",
    "InstancesService.SendDiagnosticInterrupt",
    "InstancesService.SetDeletionProtection",
    "InstancesService.SetDiskAutoDelete",
    "InstancesService.SetLabels",
    "InstancesService.SetMachineResources",
    "InstancesService.SetMachineType",
    "InstancesService.SetMetadata",
    "InstancesService.SetMinCpuPlatform",
    "InstancesService.SetName",
    "InstancesService.SetPolicy",
    "InstancesService.SetScheduling",
    "InstancesService.SetSecurityPolicy",
    "InstancesService.SetServiceAccount",
    "InstancesService.SetShieldedInstanceIntegrityPolicy",
    "InstancesService.SetShieldedVmIntegrityPolicy",
    "InstancesService.SetTags",
    "InstancesService.SimulateMaintenanceEvent",
    "InstancesService.Start",
    "InstancesService.StartWithEncryptionKey",
    "InstancesService.Stop",
    "InstancesService.Suspend",
    "InstancesService.TestPermissions",
    "InstancesService.Update",
    "InstancesService.UpdateAccessConfig",
    "InstancesService.UpdateDisplayDevice",
    "InstancesService.UpdateNetworkInterface",
    "InstancesService.UpdateShieldedInstanceConfig",
    "InstancesService.UpdateShieldedVmConfig",
    "InstantSnapshotsService.AggregatedList",
    "InstantSnapshotsService.Delete",
    "InstantSnapshotsService.Export",
    "InstantSnapshotsService.Get",
    "InstantSnapshotsService.GetPolicy",
    "InstantSnapshotsService.Insert",
    "InstantSnapshotsService.List",
    "InstantSnapshotsService.SetLabels",
    "InstantSnapshotsService.SetPolicy",
    "InstantSnapshotsService.TestPermissions",
    "InterconnectAttachmentsService.AggregatedList",
    "InterconnectAttachmentsService.Delete",
    "InterconnectAttachmentsService.Get",
    "InterconnectAttachmentsService.GetPolicy",
    "InterconnectAttachmentsService.Insert",
    "InterconnectAttachmentsService.List",
    "InterconnectAttachmentsService.Patch",
    "InterconnectAttachmentsService.SetLabels",
    "InterconnectAttachmentsService.SetPolicy",
    "InterconnectAttachmentsService.TestPermissions",
    "InterconnectLocationsService.Get",
    "InterconnectLocationsService.List",
    "InterconnectLocationsService.TestPermissions",
    "InterconnectRemoteLocationsService.Get",
    "InterconnectRemoteLocationsService.List",
    "InterconnectRemoteLocationsService.TestPermissions",
    "InterconnectsService.Delete",
    "InterconnectsService.Get",
    "InterconnectsService.GetDiagnostics",
    "InterconnectsService.GetMacsecConfig",
    "InterconnectsService.GetPolicy",
    "InterconnectsService.Insert",
    "InterconnectsService.List",
    "InterconnectsService.Patch",
    "InterconnectsService.SetLabels",
    "InterconnectsService.SetPolicy",
    "InterconnectsService.TestPermissions",
    "LicenseCodesService.Get",
    "LicenseCodesService.GetPolicy",
    "LicenseCodesService.SetPolicy",
    "LicenseCodesService.TestPermissions",
    "LicensesService.Delete",
    "LicensesService.Get",
    "LicensesService.GetPolicy",
    "LicensesService.Insert",
    "LicensesService.List",
    "LicensesService.SetPolicy",
    "LicensesService.TestPermissions",
    "MachineImagesService.Delete",
    "MachineImagesService.Get",
    "MachineImagesService.GetPolicy",
    "MachineImagesService.Insert",
    "MachineImagesService.List",
    "MachineImagesService.SetPolicy",
    "MachineImagesService.TestPermissions",
    "MachineTypesService.AggregatedList",
    "MachineTypesService.Get",
    "MachineTypesService.List",
    "ModernizationTestingResourcesService.AggregatedList",
    "ModernizationTestingResourcesService.Delete",
    "ModernizationTestingResourcesService.DeleteReference",
    "ModernizationTestingResourcesService.Get",
    "ModernizationTestingResourcesService.GetReference",
    "ModernizationTestingResourcesService.Insert",
    "ModernizationTestingResourcesService.InsertReference",
    "ModernizationTestingResourcesService.List",
    "ModernizationTestingResourcesService.ListReferences",
    "ModernizationTestingResourcesService.Patch",
    "ModernizationTestingResourcesService.PatchWithMask",
    "ModernizationTestingResourcesService.PatchWithWildcard",
    "ModernizationTestingResourcesService.QueuedUpdate",
    "ModernizationTestingResourcesService.SyncInsert",
    "ModernizationTestingResourcesService.SyncUpdate",
    "ModernizationTestingResourcesService.Update",
    "ModernizationTestingResourcesService.UpdateWithInitialize",
    "ModernizationTestingResourcesService.UpdateWithRollback",
    "NetworkAttachmentsService.AggregatedList",
    "NetworkAttachmentsService.Delete",
    "NetworkAttachmentsService.Get",
    "NetworkAttachmentsService.GetPolicy",
    "NetworkAttachmentsService.Insert",
    "NetworkAttachmentsService.List",
    "NetworkAttachmentsService.Patch",
    "NetworkAttachmentsService.SetPolicy",
    "NetworkAttachmentsService.TestPermissions",
    "NetworkEdgeSecurityServicesService.AggregatedList",
    "NetworkEdgeSecurityServicesService.Delete",
    "NetworkEdgeSecurityServicesService.Get",
    "NetworkEdgeSecurityServicesService.Insert",
    "NetworkEdgeSecurityServicesService.Patch",
    "NetworkEndpointGroupsService.AggregatedList",
    "NetworkEndpointGroupsService.AttachNetworkEndpoints",
    "NetworkEndpointGroupsService.Delete",
    "NetworkEndpointGroupsService.DetachNetworkEndpoints",
    "NetworkEndpointGroupsService.Get",
    "NetworkEndpointGroupsService.Insert",
    "NetworkEndpointGroupsService.List",
    "NetworkEndpointGroupsService.ListNetworkEndpoints",
    "NetworkEndpointGroupsService.TestPermissions",
    "NetworkFirewallPoliciesService.AddAssociation",
    "NetworkFirewallPoliciesService.AddRule",
    "NetworkFirewallPoliciesService.CloneRules",
    "NetworkFirewallPoliciesService.Delete",
    "NetworkFirewallPoliciesService.Get",
    "NetworkFirewallPoliciesService.GetAssociation",
    "NetworkFirewallPoliciesService.GetPolicy",
    "NetworkFirewallPoliciesService.GetRule",
    "NetworkFirewallPoliciesService.Insert",
    "NetworkFirewallPoliciesService.List",
    "NetworkFirewallPoliciesService.Patch",
    "NetworkFirewallPoliciesService.PatchRule",
    "NetworkFirewallPoliciesService.RemoveAssociation",
    "NetworkFirewallPoliciesService.RemoveRule",
    "NetworkFirewallPoliciesService.SetPolicy",
    "NetworkFirewallPoliciesService.TestPermissions",
    "NetworkInstancesService.Delete",
    "NetworkInstancesService.Get",
    "NetworkInstancesService.Insert",
    "NetworkInstancesService.List",
    "NetworksService.AddPeering",
    "NetworksService.Delete",
    "NetworksService.Get",
    "NetworksService.GetEffectiveFirewalls",
    "NetworksService.Insert",
    "NetworksService.List",
    "NetworksService.ListIpAddresses",
    "NetworksService.ListIpOwners",
    "NetworksService.ListPeeringRoutes",
    "NetworksService.Patch",
    "NetworksService.RemovePeering",
    "NetworksService.SwitchToCustomMode",
    "NetworksService.TestPermissions",
    "NetworksService.UpdatePeering",
    "NodeGroupsService.AddNodes",
    "NodeGroupsService.AggregatedList",
    "NodeGroupsService.Delete",
    "NodeGroupsService.DeleteNodes",
    "NodeGroupsService.Get",
    "NodeGroupsService.GetPolicy",
    "NodeGroupsService.Insert",
    "NodeGroupsService.List",
    "NodeGroupsService.ListNodes",
    "NodeGroupsService.Patch",
    "NodeGroupsService.PerformMaintenance",
    "NodeGroupsService.SetNodeTemplate",
    "NodeGroupsService.SetPolicy",
    "NodeGroupsService.SimulateMaintenanceEvent",
    "NodeGroupsService.TestPermissions",
    "NodeTemplatesService.AggregatedList",
    "NodeTemplatesService.Delete",
    "NodeTemplatesService.Get",
    "NodeTemplatesService.GetPolicy",
    "NodeTemplatesService.Insert",
    "NodeTemplatesService.List",
    "NodeTemplatesService.SetPolicy",
    "NodeTemplatesService.TestPermissions",
    "NodeTypesService.AggregatedList",
    "NodeTypesService.Get",
    "NodeTypesService.List",
    "OrganizationSecurityPoliciesService.AddAssociation",
    "OrganizationSecurityPoliciesService.AddRule",
    "OrganizationSecurityPoliciesService.CopyRules",
    "OrganizationSecurityPoliciesService.Delete",
    "OrganizationSecurityPoliciesService.Get",
    "OrganizationSecurityPoliciesService.GetAssociation",
    "OrganizationSecurityPoliciesService.GetRule",
    "OrganizationSecurityPoliciesService.Insert",
    "OrganizationSecurityPoliciesService.List",
    "OrganizationSecurityPoliciesService.ListAssociations",
    "OrganizationSecurityPoliciesService.Move",
    "OrganizationSecurityPoliciesService.Patch",
    "OrganizationSecurityPoliciesService.PatchRule",
    "OrganizationSecurityPoliciesService.RemoveAssociation",
    "OrganizationSecurityPoliciesService.RemoveRule",
    "PacketMirroringsService.AggregatedList",
    "PacketMirroringsService.Delete",
    "PacketMirroringsService.Get",
    "PacketMirroringsService.Insert",
    "PacketMirroringsService.List",
    "PacketMirroringsService.Patch",
    "PacketMirroringsService.TestPermissions",
    "ProjectsService.DisableXpnHost",
    "ProjectsService.DisableXpnResource",
    "ProjectsService.EnableXpnHost",
    "ProjectsService.EnableXpnResource",
    "ProjectsService.Get",
    "ProjectsService.GetXpnHost",
    "ProjectsService.GetXpnResources",
    "ProjectsService.ListXpnHosts",
    "ProjectsService.MoveDisk",
    "ProjectsService.MoveInstance",
    "ProjectsService.SetCommonInstanceMetadata",
    "ProjectsService.SetDefaultNetworkTier",
    "ProjectsService.SetDefaultServiceAccount",
    "ProjectsService.SetUsageExportBucket",
    "PublicAdvertisedPrefixesService.Announce",
    "PublicAdvertisedPrefixesService.Delete",
    "PublicAdvertisedPrefixesService.Get",
    "PublicAdvertisedPrefixesService.Insert",
    "PublicAdvertisedPrefixesService.List",
    "PublicAdvertisedPrefixesService.Patch",
    "PublicAdvertisedPrefixesService.Withdraw",
    "PublicDelegatedPrefixesService.AggregatedList",
    "PublicDelegatedPrefixesService.Announce",
    "PublicDelegatedPrefixesService.Delete",
    "PublicDelegatedPrefixesService.Get",
    "PublicDelegatedPrefixesService.Insert",
    "PublicDelegatedPrefixesService.List",
    "PublicDelegatedPrefixesService.Patch",
    "PublicDelegatedPrefixesService.Withdraw",
    "RegionAddressesService.AggregatedList",
    "RegionAddressesService.Delete",
    "RegionAddressesService.Get",
    "RegionAddressesService.Insert",
    "RegionAddressesService.List",
    "RegionAddressesService.Move",
    "RegionAddressesService.SetLabels",
    "RegionAddressesService.TestPermissions",
    "RegionAutoscalersService.Delete",
    "RegionAutoscalersService.Get",
    "RegionAutoscalersService.Insert",
    "RegionAutoscalersService.List",
    "RegionAutoscalersService.Patch",
    "RegionAutoscalersService.TestPermissions",
    "RegionAutoscalersService.Update",
    "RegionBackendServicesService.Delete",
    "RegionBackendServicesService.Get",
    "RegionBackendServicesService.GetHealth",
    "RegionBackendServicesService.GetPolicy",
    "RegionBackendServicesService.Insert",
    "RegionBackendServicesService.List",
    "RegionBackendServicesService.Patch",
    "RegionBackendServicesService.SetPolicy",
    "RegionBackendServicesService.SetSecurityPolicy",
    "RegionBackendServicesService.TestPermissions",
    "RegionBackendServicesService.Update",
    "RegionCommitmentsService.AggregatedList",
    "RegionCommitmentsService.Get",
    "RegionCommitmentsService.Insert",
    "RegionCommitmentsService.List",
    "RegionCommitmentsService.TestPermissions",
    "RegionCommitmentsService.Update",
    "RegionCommitmentsService.UpdateAllocations",
    "RegionDiskTypesService.Get",
    "RegionDiskTypesService.List",
    "RegionDisksService.AddResourcePolicies",
    "RegionDisksService.BulkInsert",
    "RegionDisksService.CreateSnapshot",
    "RegionDisksService.Delete",
    "RegionDisksService.Get",
    "RegionDisksService.GetPolicy",
    "RegionDisksService.Insert",
    "RegionDisksService.List",
    "RegionDisksService.RemoveResourcePolicies",
    "RegionDisksService.Resize",
    "RegionDisksService.SetLabels",
    "RegionDisksService.SetPolicy",
    "RegionDisksService.StartAsyncReplication",
    "RegionDisksService.StopAsyncReplication",
    "RegionDisksService.StopGroupAsyncReplication",
    "RegionDisksService.TestPermissions",
    "RegionDisksService.Update",
    "RegionDoodadsService.Delete",
    "RegionDoodadsService.DeleteReference",
    "RegionDoodadsService.Get",
    "RegionDoodadsService.GetReference",
    "RegionDoodadsService.Insert",
    "RegionDoodadsService.InsertReference",
    "RegionDoodadsService.InsertWithTags",
    "RegionDoodadsService.List",
    "RegionDoodadsService.ListReferences",
    "RegionDoodadsService.SetLabels",
    "RegionDoodadsService.Update",
    "RegionDoodadsService.UpdateWithTags",
    "RegionForwardingRulesService.AggregatedList",
    "RegionForwardingRulesService.Delete",
    "RegionForwardingRulesService.Get",
    "RegionForwardingRulesService.Insert",
    "RegionForwardingRulesService.List",
    "RegionForwardingRulesService.Patch",
    "RegionForwardingRulesService.SetLabels",
    "RegionForwardingRulesService.SetTarget",
    "RegionForwardingRulesService.TestPermissions",
    "RegionHealthCheckServicesService.AggregatedList",
    "RegionHealthCheckServicesService.Delete",
    "RegionHealthCheckServicesService.Get",
    "RegionHealthCheckServicesService.Insert",
    "RegionHealthCheckServicesService.List",
    "RegionHealthCheckServicesService.Patch",
    "RegionHealthCheckServicesService.TestPermissions",
    "RegionHealthChecksService.Delete",
    "RegionHealthChecksService.Get",
    "RegionHealthChecksService.Insert",
    "RegionHealthChecksService.List",
    "RegionHealthChecksService.Patch",
    "RegionHealthChecksService.TestPermissions",
    "RegionHealthChecksService.Update",
    "RegionInstanceGroupManagersService.AbandonInstances",
    "RegionInstanceGroupManagersService.ApplyUpdatesToInstances",
    "RegionInstanceGroupManagersService.CreateInstances",
    "RegionInstanceGroupManagersService.Delete",
    "RegionInstanceGroupManagersService.DeleteInstances",
    "RegionInstanceGroupManagersService.DeletePerInstanceConfigs",
    "RegionInstanceGroupManagersService.Get",
    "RegionInstanceGroupManagersService.Insert",
    "RegionInstanceGroupManagersService.List",
    "RegionInstanceGroupManagersService.ListErrors",
    "RegionInstanceGroupManagersService.ListManagedInstances",
    "RegionInstanceGroupManagersService.ListPerInstanceConfigs",
    "RegionInstanceGroupManagersService.Patch",
    "RegionInstanceGroupManagersService.PatchPerInstanceConfigs",
    "RegionInstanceGroupManagersService.RecreateInstances",
    "RegionInstanceGroupManagersService.Resize",
    "RegionInstanceGroupManagersService.ResizeAdvanced",
    "RegionInstanceGroupManagersService.ResumeInstances",
    "RegionInstanceGroupManagersService.SetAutoHealingPolicies",
    "RegionInstanceGroupManagersService.SetInstanceTemplate",
    "RegionInstanceGroupManagersService.SetTargetPools",
    "RegionInstanceGroupManagersService.StartInstances",
    "RegionInstanceGroupManagersService.StopInstances",
    "RegionInstanceGroupManagersService.SuspendInstances",
    "RegionInstanceGroupManagersService.TestPermissions",
    "RegionInstanceGroupManagersService.Update",
    "RegionInstanceGroupManagersService.UpdatePerInstanceConfigs",
    "RegionInstanceGroupsService.Get",
    "RegionInstanceGroupsService.List",
    "RegionInstanceGroupsService.ListInstances",
    "RegionInstanceGroupsService.SetNamedPorts",
    "RegionInstanceGroupsService.TestPermissions",
    "RegionInstanceTemplatesService.Delete",
    "RegionInstanceTemplatesService.Get",
    "RegionInstanceTemplatesService.Insert",
    "RegionInstanceTemplatesService.List",
    "RegionInstancesService.BulkInsert",
    "RegionInstancesService.RecommendLocations",
    "RegionInstantSnapshotsService.Delete",
    "RegionInstantSnapshotsService.Export",
    "RegionInstantSnapshotsService.Get",
    "RegionInstantSnapshotsService.GetPolicy",
    "RegionInstantSnapshotsService.Insert",
    "RegionInstantSnapshotsService.List",
    "RegionInstantSnapshotsService.SetLabels",
    "RegionInstantSnapshotsService.SetPolicy",
    "RegionInstantSnapshotsService.TestPermissions",
    "RegionModernizationTestingResourcesService.Delete",
    "RegionModernizationTestingResourcesService.DeleteReference",
    "RegionModernizationTestingResourcesService.Get",
    "RegionModernizationTestingResourcesService.GetReference",
    "RegionModernizationTestingResourcesService.Insert",
    "RegionModernizationTestingResourcesService.InsertReference",
    "RegionModernizationTestingResourcesService.List",
    "RegionModernizationTestingResourcesService.ListReferences",
    "RegionModernizationTestingResourcesService.SyncInsert",
    "RegionModernizationTestingResourcesService.Update",
    "RegionNetworkEndpointGroupsService.AttachNetworkEndpoints",
    "RegionNetworkEndpointGroupsService.Delete",
    "RegionNetworkEndpointGroupsService.DetachNetworkEndpoints",
    "RegionNetworkEndpointGroupsService.Get",
    "RegionNetworkEndpointGroupsService.Insert",
    "RegionNetworkEndpointGroupsService.List",
    "RegionNetworkEndpointGroupsService.ListNetworkEndpoints",
    "RegionNetworkFirewallPoliciesService.AddAssociation",
    "RegionNetworkFirewallPoliciesService.AddRule",
    "RegionNetworkFirewallPoliciesService.CloneRules",
    "RegionNetworkFirewallPoliciesService.Delete",
    "RegionNetworkFirewallPoliciesService.Get",
    "RegionNetworkFirewallPoliciesService.GetAssociation",
    "RegionNetworkFirewallPoliciesService.GetEffectiveFirewalls",
    "RegionNetworkFirewallPoliciesService.GetPolicy",
    "RegionNetworkFirewallPoliciesService.GetRule",
    "RegionNetworkFirewallPoliciesService.Insert",
    "RegionNetworkFirewallPoliciesService.List",
    "RegionNetworkFirewallPoliciesService.Patch",
    "RegionNetworkFirewallPoliciesService.PatchAssociation",
    "RegionNetworkFirewallPoliciesService.PatchRule",
    "RegionNetworkFirewallPoliciesService.RemoveAssociation",
    "RegionNetworkFirewallPoliciesService.RemoveRule",
    "RegionNetworkFirewallPoliciesService.SetPolicy",
    "RegionNetworkFirewallPoliciesService.TestPermissions",
    "RegionNetworksService.AddPeering",
    "RegionNetworksService.Delete",
    "RegionNetworksService.Get",
    "RegionNetworksService.GetPolicy",
    "RegionNetworksService.Insert",
    "RegionNetworksService.List",
    "RegionNetworksService.ListPeeringRoutes",
    "RegionNetworksService.RemovePeering",
    "RegionNetworksService.SetPolicy",
    "RegionNetworksService.TestPermissions",
    "RegionNetworksService.UpdatePeering",
    "RegionNotificationEndpointsService.AggregatedList",
    "RegionNotificationEndpointsService.Delete",
    "RegionNotificationEndpointsService.Get",
    "RegionNotificationEndpointsService.Insert",
    "RegionNotificationEndpointsService.List",
    "RegionNotificationEndpointsService.TestPermissions",
    "RegionOperationsService.Delete",
    "RegionOperationsService.Get",
    "RegionOperationsService.List",
    "RegionOperationsService.Wait",
    "RegionRoutersService.AggregatedList",
    "RegionRoutersService.Delete",
    "RegionRoutersService.Get",
    "RegionRoutersService.GetNatMappingInfo",
    "RegionRoutersService.GetRouterStatus",
    "RegionRoutersService.Insert",
    "RegionRoutersService.List",
    "RegionRoutersService.Patch",
    "RegionRoutersService.Preview",
    "RegionRoutersService.TestPermissions",
    "RegionRoutersService.Update",
    "RegionRoutesService.Delete",
    "RegionRoutesService.Get",
    "RegionRoutesService.Insert",
    "RegionRoutesService.List",
    "RegionRoutesService.TestPermissions",
    "RegionSecurityPoliciesService.AddRule",
    "RegionSecurityPoliciesService.Delete",
    "RegionSecurityPoliciesService.Get",
    "RegionSecurityPoliciesService.GetRule",
    "RegionSecurityPoliciesService.Insert",
    "RegionSecurityPoliciesService.List",
    "RegionSecurityPoliciesService.Patch",
    "RegionSecurityPoliciesService.PatchRule",
    "RegionSecurityPoliciesService.RemoveRule",
    "RegionSslCertificatesService.Delete",
    "RegionSslCertificatesService.Get",
    "RegionSslCertificatesService.Insert",
    "RegionSslCertificatesService.List",
    "RegionSslCertificatesService.TestPermissions",
    "RegionSslPoliciesService.Delete",
    "RegionSslPoliciesService.Get",
    "RegionSslPoliciesService.Insert",
    "RegionSslPoliciesService.List",
    "RegionSslPoliciesService.ListAvailableFeatures",
    "RegionSslPoliciesService.Patch",
    "RegionSslPoliciesService.TestPermissions",
    "RegionTargetHttpProxiesService.Delete",
    "RegionTargetHttpProxiesService.Get",
    "RegionTargetHttpProxiesService.Insert",
    "RegionTargetHttpProxiesService.List",
    "RegionTargetHttpProxiesService.SetUrlMap",
    "RegionTargetHttpProxiesService.TestPermissions",
    "RegionTargetHttpsProxiesService.Delete",
    "RegionTargetHttpsProxiesService.Get",
    "RegionTargetHttpsProxiesService.Insert",
    "RegionTargetHttpsProxiesService.List",
    "RegionTargetHttpsProxiesService.Patch",
    "RegionTargetHttpsProxiesService.SetSslCertificates",
    "RegionTargetHttpsProxiesService.SetUrlMap",
    "RegionTargetHttpsProxiesService.TestPermissions",
    "RegionTargetTcpProxiesService.Delete",
    "RegionTargetTcpProxiesService.Get",
    "RegionTargetTcpProxiesService.Insert",
    "RegionTargetTcpProxiesService.List",
    "RegionTargetTcpProxiesService.TestPermissions",
    "RegionUrlMapsService.Delete",
    "RegionUrlMapsService.Get",
    "RegionUrlMapsService.Insert",
    "RegionUrlMapsService.InvalidateCache",
    "RegionUrlMapsService.List",
    "RegionUrlMapsService.Patch",
    "RegionUrlMapsService.TestPermissions",
    "RegionUrlMapsService.Update",
    "RegionUrlMapsService.Validate",
    "RegionsService.Get",
    "RegionsService.List",
    "ResourcePoliciesService.AggregatedList",
    "ResourcePoliciesService.Delete",
    "ResourcePoliciesService.Get",
    "ResourcePoliciesService.GetPolicy",
    "ResourcePoliciesService.Insert",
    "ResourcePoliciesService.List",
    "ResourcePoliciesService.Patch",
    "ResourcePoliciesService.SetPolicy",
    "ResourcePoliciesService.TestPermissions",
    "RoutesService.Delete",
    "RoutesService.Get",
    "RoutesService.Insert",
    "RoutesService.List",
    "RoutesService.TestPermissions",
    "SecurityPoliciesService.AddRule",
    "SecurityPoliciesService.AggregatedList",
    "SecurityPoliciesService.Delete",
    "SecurityPoliciesService.Get",
    "SecurityPoliciesService.GetRule",
    "SecurityPoliciesService.Insert",
    "SecurityPoliciesService.List",
    "SecurityPoliciesService.ListPreconfiguredExpressionSets",
    "SecurityPoliciesService.Patch",
    "SecurityPoliciesService.PatchRule",
    "SecurityPoliciesService.RemoveRule",
    "SecurityPoliciesService.SetLabels",
    "SecurityPoliciesService.TestPermissions",
    "ServiceAttachmentsService.AggregatedList",
    "ServiceAttachmentsService.Delete",
    "ServiceAttachmentsService.Get",
    "ServiceAttachmentsService.GetPolicy",
    "ServiceAttachmentsService.Insert",
    "ServiceAttachmentsService.List",
    "ServiceAttachmentsService.Patch",
    "ServiceAttachmentsService.SetPolicy",
    "ServiceAttachmentsService.TestPermissions",
    "SnapshotSettingsService.Get",
    "SnapshotSettingsService.Patch",
    "SnapshotsService.Delete",
    "SnapshotsService.Get",
    "SnapshotsService.GetPolicy",
    "SnapshotsService.Insert",
    "SnapshotsService.List",
    "SnapshotsService.SetLabels",
    "SnapshotsService.SetPolicy",
    "SnapshotsService.TestPermissions",
    "SslCertificatesService.AggregatedList",
    "SslCertificatesService.Delete",
    "SslCertificatesService.Get",
    "SslCertificatesService.Insert",
    "SslCertificatesService.List",
    "SslCertificatesService.TestPermissions",
    "SslPoliciesService.AggregatedList",
    "SslPoliciesService.Delete",
    "SslPoliciesService.Get",
    "SslPoliciesService.Insert",
    "SslPoliciesService.List",
    "SslPoliciesService.ListAvailableFeatures",
    "SslPoliciesService.Patch",
    "SslPoliciesService.TestPermissions",
    "StoragePoolsService.AggregatedList",
    "StoragePoolsService.Delete",
    "StoragePoolsService.Get",
    "StoragePoolsService.GetPolicy",
    "StoragePoolsService.Insert",
    "StoragePoolsService.List",
    "StoragePoolsService.SetLabels",
    "StoragePoolsService.SetPolicy",
    "StoragePoolsService.TestPermissions",
    "StoragePoolsService.Update",
    "SubnetworksService.AggregatedList",
    "SubnetworksService.Delete",
    "SubnetworksService.ExpandIpCidrRange",
    "SubnetworksService.Get",
    "SubnetworksService.GetPolicy",
    "SubnetworksService.Insert",
    "SubnetworksService.List",
    "SubnetworksService.ListUsable",
    "SubnetworksService.Patch",
    "SubnetworksService.SetPolicy",
    "SubnetworksService.SetPrivateIpGoogleAccess",
    "SubnetworksService.TestPermissions",
    "TargetGrpcProxiesService.Delete",
    "TargetGrpcProxiesService.Get",
    "TargetGrpcProxiesService.Insert",
    "TargetGrpcProxiesService.List",
    "TargetGrpcProxiesService.Patch",
    "TargetGrpcProxiesService.TestPermissions",
    "TargetHttpProxiesService.AggregatedList",
    "TargetHttpProxiesService.Delete",
    "TargetHttpProxiesService.Get",
    "TargetHttpProxiesService.Insert",
    "TargetHttpProxiesService.List",
    "TargetHttpProxiesService.Patch",
    "TargetHttpProxiesService.SetUrlMap",
    "TargetHttpProxiesService.TestPermissions",
    "TargetHttpsProxiesService.AggregatedList",
    "TargetHttpsProxiesService.Delete",
    "TargetHttpsProxiesService.Get",
    "TargetHttpsProxiesService.Insert",
    "TargetHttpsProxiesService.List",
    "TargetHttpsProxiesService.Patch",
    "TargetHttpsProxiesService.SetCertificateMap",
    "TargetHttpsProxiesService.SetQuicOverride",
    "TargetHttpsProxiesService.SetSslCertificates",
    "TargetHttpsProxiesService.SetSslPolicy",
    "TargetHttpsProxiesService.SetUrlMap",
    "TargetHttpsProxiesService.TestPermissions",
    "TargetInstancesService.AggregatedList",
    "TargetInstancesService.Delete",
    "TargetInstancesService.Get",
    "TargetInstancesService.Insert",
    "TargetInstancesService.List",
    "TargetInstancesService.SetSecurityPolicy",
    "TargetInstancesService.TestPermissions",
    "TargetPoolsService.AddHealthCheck",
    "TargetPoolsService.AddInstance",
    "TargetPoolsService.AggregatedList",
    "TargetPoolsService.Delete",
    "TargetPoolsService.Get",
    "TargetPoolsService.GetHealth",
    "TargetPoolsService.Insert",
    "TargetPoolsService.List",
    "TargetPoolsService.RemoveHealthCheck",
    "TargetPoolsService.RemoveInstance",
    "TargetPoolsService.SetBackup",
    "TargetPoolsService.SetSecurityPolicy",
    "TargetPoolsService.TestPermissions",
    "TargetSslProxiesService.Delete",
    "TargetSslProxiesService.Get",
    "TargetSslProxiesService.Insert",
    "TargetSslProxiesService.List",
    "TargetSslProxiesService.SetBackendService",
    "TargetSslProxiesService.SetCertificateMap",
    "TargetSslProxiesService.SetProxyHeader",
    "TargetSslProxiesService.SetSslCertificates",
    "TargetSslProxiesService.SetSslPolicy",
    "TargetSslProxiesService.TestPermissions",
    "TargetTcpProxiesService.AggregatedList",
    "TargetTcpProxiesService.Delete",
    "TargetTcpProxiesService.Get",
    "TargetTcpProxiesService.Insert",
    "TargetTcpProxiesService.List",
    "TargetTcpProxiesService.SetBackendService",
    "TargetTcpProxiesService.SetProxyHeader",
    "TargetTcpProxiesService.TestPermissions",
    "TargetVpnGatewaysService.AggregatedList",
    "TargetVpnGatewaysService.Delete",
    "TargetVpnGatewaysService.Get",
    "TargetVpnGatewaysService.Insert",
    "TargetVpnGatewaysService.List",
    "TargetVpnGatewaysService.SetLabels",
    "TargetVpnGatewaysService.TestPermissions",
    "UrlMapsService.AggregatedList",
    "UrlMapsService.Delete",
    "UrlMapsService.Get",
    "UrlMapsService.Insert",
    "UrlMapsService.InvalidateCache",
    "UrlMapsService.List",
    "UrlMapsService.Patch",
    "UrlMapsService.TestPermissions",
    "UrlMapsService.Update",
    "UrlMapsService.Validate",
    "VpnGatewaysService.AggregatedList",
    "VpnGatewaysService.Delete",
    "VpnGatewaysService.Get",
    "VpnGatewaysService.GetStatus",
    "VpnGatewaysService.Insert",
    "VpnGatewaysService.List",
    "VpnGatewaysService.SetLabels",
    "VpnGatewaysService.TestPermissions",
    "VpnTunnelsService.AggregatedList",
    "VpnTunnelsService.Delete",
    "VpnTunnelsService.Get",
    "VpnTunnelsService.Insert",
    "VpnTunnelsService.List",
    "VpnTunnelsService.SetLabels",
    "VpnTunnelsService.TestPermissions",
    "ZoneDoodadsService.Delete",
    "ZoneDoodadsService.DeleteReference",
    "ZoneDoodadsService.Get",
    "ZoneDoodadsService.GetDummy",
    "ZoneDoodadsService.GetReference",
    "ZoneDoodadsService.Insert",
    "ZoneDoodadsService.InsertReference",
    "ZoneDoodadsService.List",
    "ZoneDoodadsService.ListReferences",
    "ZoneDoodadsService.SetLabels",
    "ZoneDoodadsService.Update",
    "ZoneModernizationTestingResourcesService.Delete",
    "ZoneModernizationTestingResourcesService.DeleteReference",
    "ZoneModernizationTestingResourcesService.Get",
    "ZoneModernizationTestingResourcesService.GetReference",
    "ZoneModernizationTestingResourcesService.Insert",
    "ZoneModernizationTestingResourcesService.InsertReference",
    "ZoneModernizationTestingResourcesService.List",
    "ZoneModernizationTestingResourcesService.ListReferences",
    "ZoneModernizationTestingResourcesService.SyncInsert",
    "ZoneModernizationTestingResourcesService.Update",
    "ZoneOperationsService.Delete",
    "ZoneOperationsService.Get",
    "ZoneOperationsService.List",
    "ZoneOperationsService.Wait",
    "ZoneQueuedResourcesService.AggregatedList",
    "ZoneQueuedResourcesService.Cancel",
    "ZoneQueuedResourcesService.Delete",
    "ZoneQueuedResourcesService.Get",
    "ZoneQueuedResourcesService.Insert",
    "ZoneQueuedResourcesService.List",
    "ZonesService.Get",
    "ZonesService.List",
    "compute.alpha.DisksService.Get",
    "compute.alpha.RegionDiskTypesService.List"
    },    
    "containerregistry.googleapis.com": {
    "containers.registry.read",
    "containers.registry.write"
    },
    "iam.googleapis.com": {
    "IAM.CreateRole",
    "IAM.CreateServiceAccount",
    "IAM.CreateServiceAccountKey",
    "IAM.DeleteRole",
    "IAM.DeleteServiceAccount",
    "IAM.DeleteServiceAccountKey",
    "IAM.DisableServiceAccount",
    "IAM.DisableServiceAccountKey",
    "IAM.EnableServiceAccount",
    "IAM.EnableServiceAccountKey",
    "IAM.GetIamPolicy",
    "IAM.GetRole",
    "IAM.GetServiceAccount",
    "IAM.GetServiceAccountKey",
    "IAM.ListRoles",
    "IAM.ListServiceAccountKeys",
    "IAM.ListServiceAccounts",
    "IAM.PatchServiceAccount",
    "IAM.SetIamPolicy",
    "IAM.SignBlob",
    "IAM.SignJwt",
    "IAM.TestIamPermissions",
    "IAM.UndeleteRole",
    "IAM.UndeleteServiceAccount",
    "IAM.UpdateRole",
    "IAM.UpdateServiceAccount",
    "IAM.UploadServiceAccountKey",
    "Operations.GetOperation",
    "WorkloadIdentityPools.CreateWorkloadIdentityPool",
    "WorkloadIdentityPools.CreateWorkloadIdentityPoolProvider",
    "WorkloadIdentityPools.DeleteWorkloadIdentityPool",
    "WorkloadIdentityPools.DeleteWorkloadIdentityPoolProvider",
    "WorkloadIdentityPools.GetWorkloadIdentityPool",
    "WorkloadIdentityPools.GetWorkloadIdentityPoolProvider",
    "WorkloadIdentityPools.ListWorkloadIdentityPoolProviders",
    "WorkloadIdentityPools.ListWorkloadIdentityPools",
    "WorkloadIdentityPools.UndeleteWorkloadIdentityPool",
    "WorkloadIdentityPools.UndeleteWorkloadIdentityPoolProvider",
    "WorkloadIdentityPools.UpdateWorkloadIdentityPool",
    "WorkloadIdentityPools.UpdateWorkloadIdentityPoolProvider"
    },    
    "pubsub.googleapis.com": {
    "Discovery.GetDiscovery",
    "Discovery.GetDiscoveryRest",
    "IAMPolicy.GetIamPolicy",
    "IAMPolicy.SetIamPolicy",
    "IAMPolicy.TestIamPermissions",
    "Publisher.CreateTopic",
    "Publisher.DeleteTopic",
    "Publisher.DetachSubscription",
    "Publisher.GetTopic",
    "Publisher.ListTopicSnapshots",
    "Publisher.ListTopicSubscriptions",
    "Publisher.ListTopics",
    "Publisher.Publish",
    "Publisher.UpdateTopic",
    "PublisherService.CreateTopic",
    "PublisherService.DeleteTopic",
    "PublisherService.GetTopic",
    "PublisherService.ListTopics",
    "PublisherService.Publish",
    "PublisherService.PublishBatch",
    "PushEndpoint.ProcessPushMessage",
    "SchemaService.CommitSchema",
    "SchemaService.CreateSchema",
    "SchemaService.DeleteSchema",
    "SchemaService.DeleteSchemaRevision",
    "SchemaService.GetSchema",
    "SchemaService.ListSchemaRevisions",
    "SchemaService.ListSchemas",
    "SchemaService.RollbackSchema",
    "SchemaService.ValidateMessage",
    "SchemaService.ValidateSchema",
    "Subscriber.Acknowledge",
    "Subscriber.CreateSnapshot",
    "Subscriber.CreateSubscription",
    "Subscriber.DeleteSnapshot",
    "Subscriber.DeleteSubscription",
    "Subscriber.FetchSubscriptionBacklogOldestUnacknowledgedTimestamp",
    "Subscriber.FetchSubscriptionBacklogUnacknowledgedByteCount",
    "Subscriber.GetSnapshot",
    "Subscriber.GetSubscription",
    "Subscriber.ListSnapshots",
    "Subscriber.ListSubscriptions",
    "Subscriber.ModifyAckDeadline",
    "Subscriber.ModifyPushConfig",
    "Subscriber.Pull",
    "Subscriber.Seek",
    "Subscriber.StreamingPull",
    "Subscriber.UpdateSnapshot",
    "Subscriber.UpdateSubscription",
    "SubscriberService.Acknowledge",
    "SubscriberService.CreateSubscription",
    "SubscriberService.DeleteSubscription",
    "SubscriberService.GetSubscription",
    "SubscriberService.ListSubscriptions",
    "SubscriberService.ModifyAckDeadline",
    "SubscriberService.ModifyPushConfig",
    "SubscriberService.Pull",
    "SubscriberService.PullBatch"
    },
    "run.googleapis.com": {
    "AuthorizedDomains.ListAuthorizedDomains",
    "Configurations.GetConfiguration",
    "Configurations.ListConfigurations",
    "Configurations.ReplaceConfiguration",
    "Discovery.GetDiscovery",
    "Discovery.GetDiscoveryRest",
    "DomainMappings.CreateDomainMapping",
    "DomainMappings.DeleteDomainMapping",
    "DomainMappings.GetDomainMapping",
    "DomainMappings.ListDomainMappings",
    "DomainMappings.ReplaceDomainMapping",
    "Executions.CancelExecution",
    "Executions.DeleteExecution",
    "Executions.GetExecution",
    "Executions.ListExecutions",
    "Jobs.CreateJob",
    "Jobs.DeleteJob",
    "Jobs.GetIamPolicy",
    "Jobs.GetJob",
    "Jobs.ListJobs",
    "Jobs.ReplaceJob",
    "Jobs.RunJob",
    "Jobs.RunJobPubSub",
    "Jobs.SetIamPolicy",
    "Jobs.TestIamPermissions",
    "Jobs.UndeleteJob",
    "Jobs.UpdateJob",
    "Locations.GetLocation",
    "Locations.ListLocations",
    "Namespaces.CreateNamespace",
    "Namespaces.DeleteNamespace",
    "Namespaces.GetNamespace",
    "Namespaces.ListNamespaces",
    "Namespaces.ReplaceNamespace",
    "Namespaces.UpdateNamespace",
    "Operations.CancelOperation",
    "Operations.DeleteOperation",
    "Operations.GetOperation",
    "Operations.ListOperations",
    "Operations.WaitOperation",
    "Revisions.DeleteRevision",
    "Revisions.GetRevision",
    "Revisions.ListRevisions",
    "Revisions.UndeleteRevision",
    "Routes.GetRoute",
    "Routes.ListRoutes",
    "Routes.ReplaceRoute",
    "Secrets.CreateSecret",
    "Secrets.DeleteSecret",
    "Secrets.GetSecret",
    "Secrets.ListSecrets",
    "Secrets.ReplaceSecret",
    "Services.CreateService",
    "Services.DeleteService",
    "Services.GetIamPolicy",
    "Services.GetService",
    "Services.ListServices",
    "Services.ReplaceService",
    "Services.SetIamPolicy",
    "Services.TestIamPermissions",
    "Services.UndeleteService",
    "Services.UpdateService",
    "Tasks.GetTask",
    "Tasks.ListTasks",
    "run.googleapis.com/HttpIngress"
    },
    "storage.googleapis.com": {
    "google.storage.Write",
    "google.storage.buckets.create",
    "google.storage.buckets.delete",
    "google.storage.buckets.get",
    "google.storage.buckets.getIamPolicy",
    "google.storage.buckets.list",
    "google.storage.buckets.setIamPolicy",
    "google.storage.buckets.testIamPermissions",
    "google.storage.buckets.update",
    "google.storage.hmac.createKey",
    "google.storage.hmac.deleteKey",
    "google.storage.hmac.getKey",
    "google.storage.hmac.listKey",
    "google.storage.hmac.updateKey",
    "google.storage.objects.create",
    "google.storage.objects.delete",
    "google.storage.objects.get",
    "google.storage.objects.getIamPolicy",
    "google.storage.objects.list",
    "google.storage.objects.setIamPolicy",
    "google.storage.objects.update",
    "google.storage.projects.checkVpcPolicy",
    "google.storage.projects.serviceAccounts.getOrCreate"
    },
}

SUPPORTED_PERMISSIONS: Dict[str, set[str]] = {
    "bigquery.googleapis.com": {
    "bigquery.connections.use",
    "bigquery.dataPolicies.create",
    "bigquery.dataPolicies.delete",
    "bigquery.dataPolicies.get",
    "bigquery.dataPolicies.getIamPolicy",
    "bigquery.dataPolicies.list",
    "bigquery.dataPolicies.maskedGet",
    "bigquery.dataPolicies.setIamPolicy",
    "bigquery.dataPolicies.update",
    "bigquery.dataQnaIndexes.get",
    "bigquery.dataQnaIndexes.updateData",
    "bigquery.dataQnaQuestions.create",
    "bigquery.dataQnaReports.get",
    "bigquery.datasets.create",
    "bigquery.datasets.delete",
    "bigquery.datasets.get",
    "bigquery.datasets.update",
    "bigquery.jobs.create",
    "bigquery.jobs.get",
    "bigquery.jobs.list",
    "bigquery.jobs.listAll",
    "bigquery.jobs.update",
    "bigquery.models.create",
    "bigquery.models.delete",
    "bigquery.models.getData",
    "bigquery.models.getMetadata",
    "bigquery.models.list",
    "bigquery.models.updateMetadata",
    "bigquery.reservationAssignments.list",
    "bigquery.reservations.list",
    "bigquery.routines.create",
    "bigquery.routines.delete",
    "bigquery.routines.get",
    "bigquery.routines.getIamPolicy",
    "bigquery.routines.list",
    "bigquery.routines.setIamPolicy",
    "bigquery.routines.update",
    "bigquery.rowAccessPolicies.create",
    "bigquery.rowAccessPolicies.delete",
    "bigquery.rowAccessPolicies.getFilteredData",
    "bigquery.rowAccessPolicies.getIamPolicy",
    "bigquery.rowAccessPolicies.list",
    "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
    "bigquery.rowAccessPolicies.setIamPolicy",
    "bigquery.rowAccessPolicies.update",
    "bigquery.tables.commitWriteStream",
    "bigquery.tables.create",
    "bigquery.tables.createSnapshot",
    "bigquery.tables.delete",
    "bigquery.tables.deleteSnapshot",
    "bigquery.tables.export",
    "bigquery.tables.get",
    "bigquery.tables.getData",
    "bigquery.tables.getIamPolicy",
    "bigquery.tables.list",
    "bigquery.tables.restoreSnapshot",
    "bigquery.tables.setCategory",
    "bigquery.tables.setIamPolicy",
    "bigquery.tables.update",
    "bigquery.tables.updateData",
    "bigquery.tables.updateTag",
    "bigquery.vpcsc.importData",
    "dataQnaReports.list",
    "datacatalog.categories.fineGrainedGet",
    "datacatalog.taxonomies.get"
    },
}

def validate_rules(rules: List[Dict[str, Any]], router: Dict[str, Any]) -> List[str]:
    errors: List[str] = []
    router_perims = set(router.get("perimeters", {}).keys())
    ip_cidr_re = re.compile(r"^\d{1,3}(?:\.\d{1,3}){3}/\d{1,2}$")

    for rule in rules:
        direction = rule.get("direction", "").upper()

        # 1. Perimeter existence
        for p in rule.get("perimeters", []):
            if p not in router_perims:
                errors.append(f"Perimeter '{p}' does not exist in router.yml.")

        # 2. Project ID format
        # Accept any numeric project ID (not limited to 10 digits). Previously this
        # required exactly 10 digits, but Google Cloud project numbers can vary in length.
        for res in rule.get("sources", []) + rule.get("destinations", []):
            if res.startswith("projects/"):
                proj_id = res.split("/", 1)[-1]
                if not re.fullmatch(r"\d+", proj_id):
                    errors.append(
                        f"Resource '{res}' must be of form projects/<numeric project ID>."
                    )

        # 3. IP format and TLM requirement on ingress
        tlm_id = rule.get("tlm_id", "").strip()
        for src in rule.get("sources", []):
            if "." in src and not src.startswith("projects/"):
                if not ip_cidr_re.fullmatch(src):
                    errors.append(f"IP '{src}' is not in CIDR format (x.x.x.x/xx).")
                if direction == "INGRESS" and not tlm_id:
                    errors.append(
                        "TLM-ID is required when specifying IP subnets in an INGRESS rule."
                    )

        # 4. Method validation
        svc_methods: Dict[str, List[str]] = rule.get("service_methods", {})
        for svc, mlist in svc_methods.items():
            # Skip empty lists or wildcard lists
            if not mlist or mlist == ["*"]:
                continue
            # Fail if the service isn't listed in SUPPORTED_METHODS
            if svc not in SUPPORTED_METHODS:
                errors.append(
                    f"Service '{svc}' does not have a supported methods list; remove or correct method specifications."
                )
                continue
            allowed = SUPPORTED_METHODS[svc]
            for m in mlist:
                if m not in allowed:
                    errors.append(f"Unsupported method '{m}' for service '{svc}'.")

        # 5. Permission validation
        svc_perms: Dict[str, List[str]] = rule.get("service_permissions", {})
        for svc, plist in svc_perms.items():
            # Skip empty lists or wildcard lists
            if not plist or plist == ["*"]:
                continue
            # Fail if the service isn't listed in SUPPORTED_PERMISSIONS
            if svc not in SUPPORTED_PERMISSIONS:
                errors.append(
                    f"Service '{svc}' does not have a supported permissions list; remove or correct permission specifications."
                )
                continue
            allowed = SUPPORTED_PERMISSIONS[svc]
            for p in plist:
                if p not in allowed:
                    errors.append(f"Unsupported permission '{p}' for service '{svc}'.")

    return errors

def main() -> None:
    parser = argparse.ArgumentParser(description="Validate a VPC SC request")
    parser.add_argument("--issue-file", required=True, help="Path to issue_body.md")
    parser.add_argument("--router-file", required=True, help="Path to router.yml")
    args = parser.parse_args()

    # Read inputs
    with open(args.issue_file, encoding="utf-8") as f:
        issue_text = f.read()
    with open(args.router_file, encoding="utf-8") as f:
        router = yaml.safe_load(f) or {}

    # Parse using the handler's function
    parsed = parse_issue_body(issue_text)
    enriched_rules = []
    for rule in parsed.get("rules", []):
        rc = dict(rule)
        rc["tlm_id"] = parsed.get("tlm_id", "")
        enriched_rules.append(rc)

    errors = validate_rules(enriched_rules, router)
    valid = "true" if not errors else "false"

    # Write results to GitHub Actions outputs
    out_path = os.environ.get("GITHUB_OUTPUT")
    if out_path:
        with open(out_path, "a") as out:
            out.write(f"valid={valid}\n")
            out.write(f"errors={json.dumps(errors)}\n")

    # Log results
    if errors:
        print("Validation failed:")
        for err in errors:
            print(f"- {err}")
    else:
        print("Validation passed.")

if __name__ == "__main__":
    main()
