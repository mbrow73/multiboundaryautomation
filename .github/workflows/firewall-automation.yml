name: Firewall Automation

on:
  issues:
    types:
      - labeled

jobs:
  add-firewall-rule:
    if: contains(github.event.issue.labels.*.name, 'firewall-request')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Fetch full history to allow committing back
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - name: Validate firewall request
        id: validate
        continue-on-error: true
        run: |
          # Run the validator and capture output. On error the step outcome will be 'failure'.
          python3 .github/scripts/firewall_request_validator.py "$GITHUB_EVENT_PATH" > validation_output.txt
      - name: Post validation errors and close issue
        if: steps.validate.outcome == 'failure'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract errors between the markers printed by the validator
          ERRORS=$(awk '/VALIDATION_ERRORS_START/,/VALIDATION_ERRORS_END/' validation_output.txt | sed '/VALIDATION_ERRORS_START\|VALIDATION_ERRORS_END/d')
          # Post a comment summarizing the validation errors
          gh issue comment ${{ github.event.issue.number }} --body $'### ‚ùå Firewall Request Validation Failed\n\n**Errors:**\n\n'"$(echo "$ERRORS" | sed 's/^/- /')"'\n\n_Your request was closed. Please correct the above and submit again._'
          # Close the issue
          gh issue close ${{ github.event.issue.number }}
      - name: Parse firewall request into auto.tfvars
        if: steps.validate.outcome == 'success'
        run: python3 .github/scripts/boundary_parser.py "$GITHUB_EVENT_PATH"
      - name: Commit generated firewall rules
        if: steps.validate.outcome == 'success'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Stage new or updated firewall request files
          if [ -n "$(git status --porcelain firewall-requests)" ]; then
            git add firewall-requests
            git commit -m "chore: add firewall rules for ${{ github.event.issue.number }}"
            git push origin HEAD:${{ github.ref }}
          else
            echo "No changes to commit"
          fi